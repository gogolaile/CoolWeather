package com.aigestudio.customviewdemo.views;

import android.app.Activity;
import android.content.Context;
//import android.graphics.AvoidXfermode;
//import android.graphics.Bitmap;
//import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.graphics.Path;
//import android.graphics.PathEffect;
import android.graphics.CornerPathEffect;
import android.view.View;
import android.graphics.PorterDuff;  
import android.graphics.PorterDuffXfermode; 

/**
* 自定义View
* 
* @author Aige
* @since 2014/11/19
*/
//@SuppressWarnings("deprecation")
public class CustomView extends View implements Runnable{
	private Paint mPaint;
	private Path mPath;
	private int mViewWidth, mViewHeight;// 控件宽高
//	private Context mContext;// 上下文环境引用

	
	public CustomView(Context context) {
		this(context, null);
	}

	public CustomView(Context context, AttributeSet attrs){
			super(context, attrs);
//			mContext = context;
			//初始化画笔
			initPaint();		
	}
		
	/**
	 * 初始化画笔
	 */
	 private void initPaint(){
		 //实例化画笔并打开坑锯齿
		 mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
		 
		 /**
		  * 设置画笔样式为描边，
		  * 画笔样式分三种：
		  * 1.Paint.Style.STROKE:描边
		  * 2.Paint.Style.FILL_AND_STROKE:描边并填充
		  * 3.Paint.Style.FILL:填充
		  */
		  mPaint.setStyle(Paint.Style.STROKE);
		  
		  /**设置画笔颜色为:
		   * :浅灰色:LTGRAY,红：RED，白:WHITE,黑:BLACK
		   * 
		  */
		  mPaint.setColor(Color.RED);
		  
		 /**
		  *设置描边的粗细，单位：像素PX
		  *注意:当setStrokeWidth(0)的时候描边宽度并不为0而是只占一个像素  
		  */
		  mPaint.setStrokeWidth(10);

	 }
	 
	 @Override  
	    protected void onSizeChanged(int w, int h, int oldw, int oldh) {  
	        /* 
	         * 获取控件宽高 
	         */  
	        mViewWidth = w;  
	        mViewHeight = h;  
	    } 
	 
	 @Override
	 protected void onDraw(Canvas canvas){
		 super.onDraw(canvas);
		 
		 /* 
	         * 绘制一个红色矩形 
	         */  
	        canvas.drawRect(mViewWidth / 2F - 200, mViewHeight / 2F - 200, mViewWidth / 2F + 200, mViewHeight / 2F + 200, mPaint);  
	        /* 
	         * 保存画布并绘制一个蓝色的矩形 
	         */  
	        canvas.save(); 
	        //对交集部分的处理
	        mPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.XOR));// 选择交集去上层图片
	        mPaint.setColor(Color.BLUE);  
	       canvas.drawRect(mViewWidth / 2F - 100, mViewHeight / 2F - 100, mViewWidth / 2F + 100, mViewHeight / 2F + 100, mPaint);  
	       mPaint.setStyle(Paint.Style.FILL);
	       
	       canvas.restore(); 

		 

				
	 }
	 
	 @Override
	public void run(){
		 /**
		  *  确保线程不断执行不断刷新界面
		  */
	    while(true){
			  try{
				    /**
				     * 如果半径小于200则自加否则大于200后重置半径值以实现往复   
				     */
				   	/**if (radiu <= 200){
				   		radiu += 10;
				   		//刷新View
				   		postInvalidate();
				   	}else{
				   		radiu = 0;
				   	} */
//				   	radiu = 50;
				   	postInvalidate();
				   	//每执行一次停40hongmiao
				   	Thread.sleep(40);
			   }catch(InterruptedException e){
				  e.printStackTrace();
			  }
		 }
	 }

}