package View;



import com.example.train_qurey.R;
import com.example.train_qurey.R.color;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Matrix;
import android.text.BoringLayout.Metrics;
import android.util.AttributeSet;
import android.view.View;

public class GGView extends View{

	int[] mapId;
	Bitmap[] bitmap;
	int currentX,currentY;
	int currentId = 0;
	Boolean initFlag = true;
	public GGView(Context context, AttributeSet attrs) {
		super(context, attrs);
		// TODO Auto-generated constructor stub
		this.mapId = new int[]{R.drawable.adv1,R.drawable.adv2,R.drawable.adv3};
		Paint paint = new Paint();
		paint.setColor(color.foreground_material_light);
		initBitmap();
		new Thread(){
		public void	run(){
			
			
		}
		}.start();
	}
	public void initBitmap(){
		Resources res = this.getResources();
		int number = mapId.length;
		bitmap = new Bitmap[number];
		for(int i=0;i < number;i++){
			bitmap[i] = BitmapFactory.decodeResource(res, mapId[i]);
		}
	}
        public void onDraw(Canvas canvas){
        	if(initFlag){
        		currentX = this.getWidth();
        		currentY = this.getHeight();
        	}

        	 Matrix matrix = new Matrix();    
             matrix.postScale(2f, 2f);
             Bitmap bitmap_tmp = Bitmap.createBitmap(bitmap[currentId], 0, 0, bitmap[currentId].getWidth(), bitmap[currentId].getHeight(),matrix,true);
        	 int StartX = (currentX-bitmap_tmp.getWidth())/2;
        	 int StartY = (currentY-bitmap_tmp.getHeight())/2;
        	canvas.drawARGB(128, 128, 128, 128);
        	canvas.drawBitmap(bitmap, matrix, paint);
        }


}
